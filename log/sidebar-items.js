initSidebarItems({"enum":[["LogLevel","An enum representing the available verbosity levels of the logging framework"],["LogLevelFilter","An enum representing the available verbosity level filters of the logging framework."]],"fn":[["max_log_level","Returns the current maximum log level."],["set_logger","Sets the global logger."],["set_logger_raw","Sets the global logger from a raw pointer."],["shutdown_logger_raw","Shuts down the global logger."]],"macro":[["debug!","Logs a message at the debug level."],["error!","Logs a message at the error level."],["info!","Logs a message at the info level."],["log!","The standard logging macro."],["log_enabled!","Determines if a message logged at the specified level in that module will be logged."],["trace!","Logs a message at the trace level."],["warn!","Logs a message at the warn level."]],"struct":[["LogLocation","The location of a log message."],["LogMetadata","Metadata about a log message."],["LogRecord","The \"payload\" of a log message."],["MaxLogLevelFilter","A token providing read and write access to the global maximum log level filter."],["SetLoggerError","The type returned by `set_logger` if `set_logger` has already been called."],["ShutdownLoggerError","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has already been called or if `set_logger_raw` has not been called yet."]],"trait":[["Log","A trait encapsulating the operations required of a logger"]]});